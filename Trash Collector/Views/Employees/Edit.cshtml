@model Trash_Collector.Models.Employee

@{
    ViewBag.Title = "Edit";
}

<h2>Select Day For Search</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
 
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.EmployeeID)

    @*<div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>*@

    @*<div class="form-group">
        @Html.LabelFor(model => model.ZipCodeId, "ZipCodeId", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("ZipCodeId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ZipCodeId, "", new { @class = "text-danger" })
        </div>
    </div>*@


    <div class="form-group">
        @Html.LabelFor(model => model.PickUpDay, "Pick Up Day", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
         @*   @Html.DropDownList("PickUpId", null, htmlAttributes: new { @class = "form-control" })*@
            @Html.DropDownListFor(model => model.PickUpDay, ViewBag.PickUpId as SelectList, new { @class = "form-control" })
            @*@Html.EditorFor(model => model.PickUpDate, new { htmlAttributes = new { @class = "form-control" } })*@
            @Html.ValidationMessageFor(model => model.PickUpDay, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to Main List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
